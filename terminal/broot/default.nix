{lib, ...}:
{
  # programs.broot = {
  #   enable = true;
  #   enableZshIntegration = true;
  #   # settings = lib.mkForce( builtins.fromTOML ( builtins.readFile ./config/conf.toml));
  # };

  xdg.configFile."broot/conf.hjson".source = ./config/conf.hjson;
  xdg.configFile."broot/verbs.hjson".source =  ./config/verbs.hjson;
  xdg.configFile."broot/skins/catppuccin-mocha.hjson".source =  ./config/skins/catppuccin-mocha.hjson;
  xdg.configFile."broot/skins/white.hjson".source =  ./config/skins/white.hjson;

  # do zsh stuff for `br` alias
  programs.zsh.initExtra = ''
# This script was automatically generated by the broot program
# More information can be found in https://github.com/Canop/broot
# This function starts broot and executes the command
# it produces, if any.
# It's needed because some shell commands, like `cd`,
# have no useful effect if executed in a subshell.
function br {
    local cmd cmd_file code
    cmd_file=$(mktemp)
    if broot --outcmd "$cmd_file" "$@"; then
        cmd=$(<"$cmd_file")
        command rm -f "$cmd_file"
        eval "$cmd"
    else
        code=$?
        command rm -f "$cmd_file"
        return "$code"
    fi
}'';
}
